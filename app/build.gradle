plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

def properties = new Properties()

file("../build.properties").withInputStream {
    stream -> properties.load(stream)
}

android {
    compileSdk 31

    defaultConfig {
        applicationId properties.getProperty("APPLICATION_ID")
        minSdk 21
        targetSdk 31
        versionCode properties.getProperty("APP_VERSION_CODE").toInteger()
        versionName properties.getProperty("APP_VERSION_NAME")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'DATABASE_NAME', properties.getProperty("DATABASE_NAME")
        buildConfigField 'String', 'SERVER_URL', properties.getProperty("SERVER_URL")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'

    // Test
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$version_lifecycle"

    // Hilt Dependency Injection
    implementation "com.google.dagger:hilt-android:$version_hilt"
    kapt "com.google.dagger:hilt-compiler:$version_hilt"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_nav"
    implementation "androidx.navigation:navigation-ui-ktx:$version_nav"

    // DataBinding
    kapt "com.android.databinding:compiler:$version_compiler"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    // Room database
    implementation "androidx.room:room-runtime:$version_room"
    kapt "androidx.room:room-compiler:$version_room"
    implementation "androidx.room:room-ktx:$version_room"

    // Http Logging
    implementation "com.squareup.okhttp3:logging-interceptor:$version_okhttp"

    // Moshi Json Converter
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    //Work Manager
    implementation "androidx.work:work-runtime-ktx:$version_work"

    // Image loader
    implementation "com.github.bumptech.glide:glide:$version_glide"
    kapt "com.github.bumptech.glide:compiler:$version_glide"

    // Logging
    api "com.jakewharton.timber:timber:$version_timber"

    // shimmer loading
    implementation "com.facebook.shimmer:shimmer:$version_shimmer"

}